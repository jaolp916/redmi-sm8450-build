name: 修复硬件问题的完整编译流程
on:
  workflow_dispatch:
    inputs:
      device:
        description: "设备代号（如Redmi K50 Ultra：rubens）"
        required: true
        default: "rubens"
        type: string
      build_type:
        description: "编译类型"
        required: true
        default: "userdebug"
        type: choice
        options: [user, userdebug, eng]

jobs:
  build_with_patches:
    runs-on: ubuntu-22.04
    steps:
      - name: 拉取仓库配置（含补丁和脚本）
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 极致清理磁盘空间（确保足够编译）
        run: |
          # 删除超大无用文件
          sudo rm -rf /var/lib/docker /usr/local/lib/android /usr/share/dotnet /opt/ghc
          sudo rm -rf /var/cache/apt/archives/* /var/log/* /tmp/* ~/.cache
          sudo apt clean && sudo apt autoremove -y --purge
          # 查看清理后空间
          df -h /mnt

      - name: 安装编译依赖
        run: |
          sudo apt update
          sudo apt install -y git git-lfs curl repo bc bison build-essential ccache flex g++-multilib gcc-multilib lib32ncurses5-dev lib32readline-dev lib32z1-dev libelf-dev liblz4-tool libncurses5-dev zlib1g-dev openjdk-17-jdk-headless
          # 安装最新repo工具
          sudo apt remove -y repo
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo && chmod a+x ~/repo && sudo mv ~/repo /usr/local/bin/

      - name: 同步完整源码（含设备树和内核）
        run: |
          # 创建源码目录并授权
          sudo mkdir -p /mnt/android/redmi
          sudo chown -R $USER:$USER /mnt/android
          cd /mnt/android/redmi
          
          # 初始化LineageOS源码（lineage-20分支）
          repo init -u https://github.com/LineageOS/android.git -b lineage-20.0 --depth=1 --no-clone-bundle
          
          # 复制设备专属manifest（仅保留设备树、内核等）
          mkdir -p .repo/local_manifests
          cp $GITHUB_WORKSPACE/local_manifests/redmi-sm8450.xml .repo/local_manifests/
          
          # 同步源码（低并行度避免空间不足）
          repo sync -c -j2 --no-tags --force-sync
          df -h /mnt

      - name: 应用所有补丁（核心修复步骤）
        run: |
          # 赋予脚本执行权限
          chmod +x $GITHUB_WORKSPACE/scripts/apply-all-patches.sh
          
          # 执行补丁应用脚本（解决电池容量、显示、分区解锁等问题）
          $GITHUB_WORKSPACE/scripts/apply-all-patches.sh || {
            echo "❌ 补丁应用失败，终止编译"
            exit 1
          }

      - name: 编译核心镜像（带补丁修复）
        run: |
          cd /mnt/android/redmi
          # 执行编译脚本（生成vendor、dtb等镜像）
          chmod +x $GITHUB_WORKSPACE/scripts/build.sh
          $GITHUB_WORKSPACE/scripts/build.sh ${{ github.event.inputs.device }} ${{ github.event.inputs.build_type }}

      - name: 收集修复后的产物
        run: |
          mkdir -p $GITHUB_WORKSPACE/out
          cp /mnt/android/redmi/out/target/product/${{ github.event.inputs.device }}/{vendor.img,vendor_dlkm.img,dtb.img,dtbo.img} $GITHUB_WORKSPACE/out/
          ls -lh $GITHUB_WORKSPACE/out/  # 显示产物信息

      - name: 上传修复后的镜像
        uses: actions/upload-artifact@v4
        with:
          name: fixed-artifacts-${{ github.event.inputs.device }}
          path: out/
          retention-days: 14  # 延长保存时间，方便测试
